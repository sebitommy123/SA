[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "sa"
version = "0.1.0"
description = "Semantic Analysis Framework for generic JSON objects"
readme = "README.md"
license = {text = "Custom License - Use allowed, redistribution prohibited"}
authors = [
    {name = "Sebastiaan Szafir"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: Other/Proprietary License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.8"
dependencies = [
    "requests>=2.25.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=21.0",
    "flake8>=3.8",
    "mypy>=0.800",
    "pyright>=1.1.0",
    "ruff>=0.1.0",
]

[project.scripts]
sa-shell = "sa.shell:main"
sa-query = "sa.shell:main"

[tool.black]
line-length = 88
target-version = ['py38']

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"] 

[tool.ruff]
line-length = 88
target-version = "py38"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W", "B", "A", "C4", "UP", "ARG", "SIM", "TCH", "TID", "Q", "RUF"]

[tool.ruff.lint.isort]
known-first-party = ["sa"]

[tool.pyright]
include = ["sa"]
exclude = ["tests", "**/__pycache__"]
pythonVersion = "3.8"
pythonPlatform = "Darwin"
typeCheckingMode = "basic" 